generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
  BUSINESS
}

model Status {
  id           Int           @id @default(autoincrement())
  name         String        @unique
  publications Publication[]
}

model PublicationMediaResource {
  id            Int         @id @default(autoincrement())
  url           String
  publicationId Int
  publication   Publication @relation(fields: [publicationId], references: [id])
}

model Publication {
  id             Int     @id @default(autoincrement())
  title          String
  description    String?
  price          Float?
  previousPrice  Float?
  currencyType   String  @default("$")
  condition      String
  year           Int?
  km             Int?
  color          String?
  neighborhood   String?
  transmission   String?
  engine         String?
  fuelType       String?
  doors          String?
  uniqueOwner    Boolean @default(false)
  slugUrl        String  @unique
  swap           Boolean @default(false)
  ownerPhone     String?
  marketDiscount Boolean @default(false)

  personId Int
  person   Person @relation(fields: [personId], references: [id])

  cityId Int
  city   City @relation(fields: [cityId], references: [id])

  statusId Int
  status   Status @relation(fields: [statusId], references: [id])

  vehicleCategoryId Int?
  vehicleCategory   VehicleCategory? @relation(fields: [vehicleCategoryId], references: [id])

  vehicleModelId Int?
  vehicleModel   VehicleModel? @relation(fields: [vehicleModelId], references: [id])

  vehicleMakeId Int?
  vehicleMake   VehicleMake? @relation(fields: [vehicleMakeId], references: [id])

  vehicleVersionId Int?
  vehicleVersion   VehicleVersion? @relation(fields: [vehicleVersionId], references: [id])

  publicationMediaResources PublicationMediaResource[]
  vehicleCustomDataId       Int?
}

model Province {
  id     Int    @id @default(autoincrement())
  name   String @unique
  cities City[]
}

model Phone {
  id            Int     @id @default(autoincrement())
  phone         String
  type          String  @default("wp")
  verified      Boolean @default(false)
  verifiedToken String?

  personId Int
  person   Person @relation(fields: [personId], references: [id])
}

model PersonMediaResource {
  id        Int    @id @default(autoincrement())
  url       String
  imageType String

  personId Int
  person   Person @relation(fields: [personId], references: [id])
}

model Person {
  id              Int      @id @default(autoincrement())
  email           String?  @unique
  name            String?
  password        String? // Only for email/password login
  role            Role     @default(USER) // Use the Role enum
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  maxPublications Int      @default(3)
  openingHours    String?
  locationStreet  String?

  accounts             Account[]
  phones               Phone[]
  personMediaResources PersonMediaResource[]
  publications         Publication[]
}

model Account {
  id           Int      @id @default(autoincrement())
  userId       Int
  user         Person   @relation(fields: [userId], references: [id])
  provider     String // e.g., "email", "google", "facebook"
  providerId   String? // Unique ID from the provider (e.g., Google ID, Facebook ID)
  accessToken  String? // OAuth access token
  refreshToken String? // OAuth refresh token
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@unique([provider, providerId]) // Ensure unique combination of provider and providerId
}

model City {
  id         Int    @id @default(autoincrement())
  name       String
  provinceId Int

  province     Province      @relation(fields: [provinceId], references: [id])
  publications Publication[]
}

model VehicleVersion {
  id             Int          @id @default(autoincrement())
  name           String
  vehicleModelId Int
  vehicleModel   VehicleModel @relation(fields: [vehicleModelId], references: [id])

  publications Publication[]
}

model VehicleCategory {
  id           Int           @id @default(autoincrement())
  name         String
  publications Publication[]
}

model VehicleModel {
  id            Int         @id @default(autoincrement())
  name          String
  vehicleMakeId Int
  vehicleMake   VehicleMake @relation(fields: [vehicleMakeId], references: [id])

  vehicleVersions VehicleVersion[]
  publications    Publication[]
}

model VehicleMake {
  id            Int            @id @default(autoincrement())
  name          String         @unique
  vehicleModels VehicleModel[]

  publications Publication[]
}
